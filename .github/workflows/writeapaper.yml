# Github workflow to compile latex and deploy the pdf to an orphan branch.
# The latest compiled pdf is at available at e.g.
# https://github.com/dgerosa/reponame/blob/build/filename.pdf
# Davide Gerosa (2021) https://github.com/dgerosa

name: writeapaper
on: [push]
jobs:
  paper:
    runs-on: ubuntu-latest
    env:
      # Edit here with the names of your latex file and directory (can use ".")
      DIR: src
      FILE: artikkeli
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install TeXlive
        run: sudo apt-get update && sudo apt-get install texlive texlive-publishers texlive-lang-european biber
      - name: LaTeX compile
        working-directory: ${{ env.DIR }}
        # run: latexmk -pdf -bibtex ${{ env.FILE }}
        run: pdflatex ${{ env.FILE }}; biber ${{ env.FILE }}; pdflatex ${{ env.FILE }}; pdflatex ${{ env.FILE }};
      - name: move
        run: mkdir -p github_artifacts && mv ${{ env.DIR }}/${{ env.FILE }}.pdf ./github_artifacts/
      - name: Upload pdf as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.FILE }}.pdf
          path: ./github_artifacts
  deploy:
    # Edit here if compiling multiple papers
    permissions: write-all
    needs: [paper]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: github_artifacts
      - name: move
        run: mkdir -p github_deploy && mv github_artifacts/*/* github_deploy
      - name: next version
        uses: reecetech/version-increment@2023.9.3
        id: version
        with:
          scheme: calver
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with: 
          draft: true
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: upload article
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./github_deploy/artikkeli.pdf
          asset_name: artikkeli.pdf
          asset_content_type: application/pdf
        
      
  clean:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: delete
        uses: geekyeggo/delete-artifact@v2
        with:
          name: '*.pdf'